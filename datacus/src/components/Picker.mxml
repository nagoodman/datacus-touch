<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="components.*"
		 creationComplete="Picker_creationCompleteHandler(event)">

	
	<fx:Script>
		<![CDATA[
			//imports classes needed for component
			import com.adobe.serialization.json.JSON;
			
			import flash.events.TouchEvent;
			import flash.events.TransformGestureEvent;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectProxy;

			
			//init
			protected function Picker_creationCompleteHandler(event:FlexEvent):void{
				//Init state
				currentState='State1';
			}
			
			
			/*Functions that populate the picker and handle changes within the picker*/
			public function populatePicker():void{
				var tempQueryName:String = FlexGlobals.topLevelApplication.currentQueryName;
				var tempServerID:String = FlexGlobals.topLevelApplication.serverIDPicker;
				
				//call http service call for retrieving the list of dimensions
				FlexGlobals.topLevelApplication.callDimensions.url= tempServerID + 'dimensions';
				FlexGlobals.topLevelApplication.callDimensions.send()
			}
			
			//forms the url string to retrieve the levels of a query
			public function createLevels(dimension:String, hierarchy:String):void{
				//set global variables for tracking dimension and hierarchy
				FlexGlobals.topLevelApplication.currentDimension = dimension;
				FlexGlobals.topLevelApplication.currentHierarchy = hierarchy;
				
				//temp variables for creating http service url from global values
				var tempQueryName:String = FlexGlobals.topLevelApplication.currentQueryName;
				var tempServerID:String = FlexGlobals.topLevelApplication.serverIDPicker;
				
				//resets 4 levels of members within picker
				MembersDLContainer.membersLevel1.dataProvider = null;
				MembersDLContainer.membersLevel2.dataProvider = null;
				MembersDLContainer.membersLevel3.dataProvider = null;
				MembersDLContainer.membersLevel4.dataProvider = null;
				
				//calls http service to retrieve list of levels
				FlexGlobals.topLevelApplication.callLevels.url= tempServerID+"dimensions/"+dimension+"/hierarchies/"+hierarchy+"/levels";
				FlexGlobals.topLevelApplication.callLevels.send();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:states>
		<s:State name="State1"/>
		<s:State name="State2"/>

	</s:states>
	<fx:DesignLayer>
		<s:SkinnableContainer id="picker" height="620"  x.State1="0" y.State1="0"  width.State1="140"  width.State2="1240" x.State2="-1100" skinClass="skins.Panel" skinClass.State2="skins.Panel_picker_extended" />
		
		<s:RichText color="#2B4381" fontFamily="Arial" fontSize="20" id="PickerLabel" tabStops="S0 S50 S100" text="Picker" x.State1="40" y="300" includeIn="State1" />
	</fx:DesignLayer>
	<components:PickerCloseArea id="PickerClose" includeIn="State2" x.State2="-1100"/>
	
	<components:LevelsDatalistContainer id="LevelsDLContainer" 
		includeIn="State2" 
		x="-990" y="105" alpha="0.79"/>
	
	<components:DimensionsDatalistContainer id="DimensionsDLContainer" 
											includeIn="State2"  
											x="-795" y="20" alpha="0.79"/>
	
	<components:MembersDatalistsContainer id="MembersDLContainer" 
										  includeIn="State2" 
										  x="-795" y="100" alpha="0.79" />
	
	
	<s:transitions>
		<s:Transition autoReverse="true" fromState="State1" toState="State2">
			<s:Parallel>
				<s:Parallel target="{picker}">
					<s:Move autoCenterTransform="true" duration="1000" startDelay="300"/>
					<s:Resize duration="1000" startDelay="300"/>
				</s:Parallel>
				<s:Parallel target="{MembersDLContainer}">
					<s:Fade duration="500" startDelay="1300"/>
				</s:Parallel>
				<s:Parallel target="{DimensionsDLContainer}">
					<s:Fade duration="500" startDelay="1300"/>
				</s:Parallel>
				<s:Parallel target="{LevelsDLContainer}">
					<s:Fade duration="500" startDelay="1300"/>
				</s:Parallel>
				<s:Parallel target="{PickerClose}">
					<s:Fade duration="500" startDelay="1300"/>
				</s:Parallel>
				<s:Parallel target="{PickerLabel}">
					<s:Fade duration="300" startDelay="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition autoReverse="true" fromState="State2" toState="State1">
			<s:Parallel>
				<s:Parallel target="{picker}">
					<s:Move autoCenterTransform="true" duration="1000" startDelay="300"/>
					<s:Resize duration="1000" startDelay="300"/>
				</s:Parallel>
				<s:Parallel target="{MembersDLContainer}">
					<s:Fade duration="300" startDelay="0"/>
				</s:Parallel>
				<s:Parallel target="{DimensionsDLContainer}">
					<s:Fade duration="300" startDelay="0"/>
				</s:Parallel>
				<s:Parallel target="{LevelsDLContainer}">
					<s:Fade duration="300" startDelay="0"/>
				</s:Parallel>
				<s:Parallel target="{PickerClose}">
					<s:Fade duration="300" startDelay="0"/>
				</s:Parallel>
				<s:Parallel target="{PickerLabel}">
					<s:Fade duration="500" startDelay="1300"/>
				</s:Parallel>
			</s:Parallel>			
		</s:Transition>
	</s:transitions>
</s:Group>